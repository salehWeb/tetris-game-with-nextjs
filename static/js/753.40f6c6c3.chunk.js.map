{"version":3,"file":"static/js/753.40f6c6c3.chunk.js","mappings":"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","sources":["components/login/Login.tsx"],"sourcesContent":["import { useState } from 'react'\r\nimport { FcGoogle } from 'react-icons/fc'\r\nimport { BsEyeSlash, BsEye } from 'react-icons/bs'\r\nimport Swal from 'sweetalert2'\r\nimport { getUser, loginWithGoogle } from '../../server/index'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport LoderBtn from '../tools/LoderBtn'\r\nimport {motion} from 'framer-motion'\r\n\r\nconst Login = () => {\r\n  const history = useNavigate()\r\n  const DefultFormVaule: any = {\r\n    password: '',\r\n    email: ''\r\n  }\r\n\r\n  const Client_ID = process.env.REACT_APP_VAR_ClEINT_ID === undefined ? '' : process.env.REACT_APP_VAR_ClEINT_ID;\r\n\r\n  const [forms, setForms] = useState(DefultFormVaule)\r\n  const [eye, setEye] = useState(false)\r\n  const [dispeldButtton, setDispeldButtton] = useState(false)\r\n  const [googleBtn, setDispeldGoogle] = useState(false)\r\n\r\n\r\n\r\n  const handelEye = () => {\r\n    setEye(!eye)\r\n  }\r\n\r\n\r\n  const handelSuccess = async (res: any) => {\r\n\r\n    let msg: any;\r\n    let data: any;\r\n\r\n    const { profileObj } = await res\r\n\r\n\r\n    await loginWithGoogle({ email: profileObj.email }).then((r) => {\r\n      msg = r.data.msg\r\n      data = r.data\r\n      console.log(r)\r\n\r\n    }).catch(async (e) => {\r\n      setDispeldGoogle(false)\r\n      return await Swal.fire({\r\n        icon: 'error',\r\n        title: 'filed',\r\n        text: `${e.message}`\r\n      })\r\n    })\r\n\r\n    if (msg === ' login sucsas ') {\r\n\r\n      await Swal.fire({\r\n        icon: 'success',\r\n        title: 'success',\r\n        text: `${msg}`\r\n      })\r\n      history(\"/Welcom#top\")\r\n      localStorage.setItem('profile', JSON.stringify({ user: data.user, token: data.token }))\r\n\r\n\r\n      setForms(DefultFormVaule)\r\n      setDispeldGoogle(false)\r\n\r\n    }\r\n\r\n    else if (msg === ' the email is wrong try agin!. or sing in if do not have an account ') {\r\n\r\n      await Swal.fire({\r\n        icon: 'error',\r\n        title: 'email is wrong !',\r\n        text: `${msg}`\r\n      })\r\n\r\n      setDispeldGoogle(false)\r\n    }\r\n  }\r\n\r\n  const handelFailure = async (err: any) => {\r\n    if (err.message) {\r\n      return await Swal.fire({\r\n        icon: 'error',\r\n        title: 'filed',\r\n        text: `${err.message}`\r\n      })\r\n    }\r\n  }\r\n\r\n  const handelSubmit = async (e: any) => {\r\n    let data: any;\r\n    let msg: any;\r\n\r\n    e.preventDefault()\r\n    setDispeldButtton(true)\r\n\r\n    await getUser(forms).then((r) => {\r\n      msg = r.data.msg\r\n      data = r.data\r\n\r\n    }).catch(async (e) => {\r\n      setDispeldButtton(false)\r\n      return await Swal.fire({\r\n        icon: 'error',\r\n        title: 'filed',\r\n        text: `${e.message}`\r\n      })\r\n    })\r\n\r\n    if (msg === ' login sucsas ') {\r\n\r\n      await Swal.fire({\r\n        icon: 'success',\r\n        title: 'success',\r\n        text: `${msg}`\r\n      })\r\n      history(\"/Welcom\")\r\n\r\n      localStorage.setItem('profile', JSON.stringify({ user: data.user, token: data.token }))\r\n      setForms(DefultFormVaule)\r\n      setDispeldButtton(false)\r\n\r\n    }\r\n    else if (msg === ' the email is wrong try agin!. or sing in if do not have an account ') {\r\n\r\n      await Swal.fire({\r\n        icon: 'error',\r\n        title: 'email is wrong !',\r\n        text: `${msg}`\r\n      })\r\n\r\n      setDispeldButtton(false)\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"h-screen w-full \">\r\n        <div className=\"px-6 py-12 w-full h-full\">\r\n          <div className=\"flex justify-center items-center  w-full h-full text-gray-800 \">\r\n            <motion.form \r\n            initial={{opacity: 0, y: -200}}\r\n            animate={{opacity: 1, y: 0}}\r\n            transition={{duration: 0.8}}\r\n            onSubmit={(e) => handelSubmit(e)} className=' bg-white w-[30rem] h-auto rounded-md shadow-lg p-4'>\r\n              <h1 className='text-2xl mb-4'>Login <hr className='mt-2' /></h1>\r\n              <div className=\"mb-6\">\r\n                <label className=\"sr-only\">Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control block w-full px-4 py-2 text-xl font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\r\n                  placeholder=\"Email address\"\r\n                  required\r\n                  autoComplete='on'\r\n                  value={forms.email}\r\n                  onChange={(e) => setForms({ ...forms, email: e.target.value })}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mb-6 relative\">\r\n                <label className=\"sr-only\">Password</label>\r\n                <input\r\n                  type={eye ? 'text' : 'password'}\r\n                  className=\"form-control block w-full px-4 py-2 text-xl font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  autoComplete='on'\r\n                  minLength={8}\r\n                  maxLength={12}\r\n                  value={forms.password}\r\n                  onChange={(e) => setForms({ ...forms, password: e.target.value })}\r\n                />\r\n                <div className=\"border absolute transition-all duration-150 ease-in-out top-[1px] right-[1px] h-[44px] rounded-lg p-2 cursor-pointer hover:bg-slate-100\"\r\n                  onClick={handelEye}\r\n                >\r\n                  {eye ? (\r\n                    <BsEye className='min-h-full w-8' />\r\n                  ) : (\r\n                    <BsEyeSlash className='min-h-full w-8' />\r\n                  )}\r\n\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-center items-center mb-6\">\r\n                <p>do not have an acount <Link to='/singin#top' className=\"underline text-blue-600 cursor-pointer\">Sing  in</Link></p>\r\n              </div>\r\n\r\n              <button\r\n                disabled={dispeldButtton}\r\n                type=\"submit\"\r\n                className={`inline-block px-7 py-3 ${dispeldButtton ? 'bg-gray-400' : 'bg-blue-600'} ease-in-out duration-100 transition-all  text-white font-medium text-sm leading-snug uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg w-full`}\r\n                data-mdb-ripple=\"true\"\r\n                data-mdb-ripple-color=\"light\"\r\n              >\r\n                {dispeldButtton ? (\r\n                  <div className=\"flex justify-center items-center w-full \">\r\n                    <LoderBtn />\r\n                  </div>\r\n                ) : (\r\n                  'Login'\r\n                )}\r\n              </button>\r\n\r\n              <div\r\n                className=\"flex items-center my-4 before:flex-1 before:border-t before:border-gray-300 before:mt-0.5 after:flex-1 after:border-t after:border-gray-300 after:mt-0.5\"\r\n              >\r\n                <p className=\"text-center font-semibold mx-4 mb-0\">OR</p>\r\n              </div>\r\n\r\n\r\n\r\n\r\n\r\n              <GoogleLogin\r\n                clientId={Client_ID}\r\n                render={(prop: any) => (\r\n                  <button \r\n                    type=\"button\"\r\n                    data-mdb-ripple=\"true\"\r\n                    data-mdb-ripple-color=\"light\"\r\n                    onClick={prop.onClick}\r\n                    className=\"text-white bg-[#4285F4] hover:bg-[#4285F4]/90 focus:ring-4 focus:outline-none focus:ring-[#4285F4]/50 font-medium rounded-md flex justify-center items-center text-md px-5 py-2.5 text-center min-w-full mb-2\">\r\n                    <FcGoogle className=\"w-6 h-6 mr-2 -ml-1\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fab\" data-icon=\"google\" />\r\n                    Login in with Google\r\n                  </button>\r\n                )}\r\n                onSuccess={handelSuccess}\r\n                onFailure={handelFailure}\r\n              />\r\n\r\n            </motion.form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login"],"names":["history","useNavigate","DefultFormVaule","password","email","useState","forms","setForms","eye","setEye","dispeldButtton","setDispeldButtton","setDispeldGoogle","handelSuccess","res","profileObj","loginWithGoogle","then","r","msg","data","console","log","catch","e","Swal","icon","title","text","message","localStorage","setItem","JSON","stringify","user","token","handelFailure","err","handelSubmit","preventDefault","getUser","className","initial","opacity","y","animate","transition","duration","onSubmit","type","placeholder","required","autoComplete","value","onChange","target","minLength","maxLength","onClick","to","disabled","GoogleLogin","clientId","process","render","prop","focusable","onSuccess","onFailure"],"sourceRoot":""}