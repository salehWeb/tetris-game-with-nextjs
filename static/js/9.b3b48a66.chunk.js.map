{"version":3,"file":"static/js/9.b3b48a66.chunk.js","mappings":"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","sources":["components/login/Singin.tsx"],"sourcesContent":["import { useState } from 'react'\r\nimport { FcGoogle } from 'react-icons/fc'\r\nimport { BsEyeSlash, BsEye } from 'react-icons/bs'\r\nimport Swal from 'sweetalert2'\r\nimport { setUser, SingWithGoogle } from '../../server'\r\nimport GoogleLogin from 'react-google-login'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport {motion} from 'framer-motion'\r\nimport LoderBtn from '../tools/LoderBtn'\r\n\r\nconst Singin = () => {\r\n  const history = useNavigate()\r\n  const DefultFormVaule: any = {\r\n    name: '',\r\n    password: '',\r\n    email: ''\r\n  }\r\n\r\n  const Client_ID = process.env.REACT_APP_VAR_ClEINT_ID === undefined ? '' : process.env.REACT_APP_VAR_ClEINT_ID;\r\n\r\n  const [forms, setForms] = useState(DefultFormVaule)\r\n  const [eye, setEye] = useState(false)\r\n\r\n  const [dispeldButtton, setDispeldButtton] = useState(false)\r\n\r\n  const handelEye = () => {\r\n    setEye(!eye)\r\n  }\r\n\r\n  const handelSuccess = async (res: any) => {\r\n\r\n    const { profileObj, tokenId } = await res\r\n    const user: Object = { profile: profileObj, token: tokenId }\r\n    const userData = {\r\n      email: profileObj.email,\r\n      name: profileObj.name\r\n    }\r\n    let msg: any;\r\n    await SingWithGoogle(userData).then((r) => msg = r.data).catch(async (e) => {\r\n      setDispeldButtton(false)\r\n      return await Swal.fire({\r\n        icon: 'error',\r\n        title: 'filed',\r\n        text: `${e.message}`\r\n      })\r\n    })\r\n\r\n    if (msg.msg === \" acount sucssfuly created \") {\r\n      await Swal.fire({\r\n        icon: 'success',\r\n        title: 'success',\r\n        text: `${msg.msg}`\r\n      })\r\n      history('/login')\r\n\r\n      setDispeldButtton(false)\r\n      setForms(DefultFormVaule)\r\n\r\n    }\r\n\r\n    if (msg.msg === \" this account is already exist!. try login.\") {\r\n\r\n      await Swal.fire({\r\n        icon: 'error',\r\n        title: 'felid',\r\n        text: `${msg.msg}`\r\n      })\r\n\r\n      setDispeldButtton(false)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const handelFailure = async (err: any) => {\r\n    if (err.message) {\r\n      return await Swal.fire({\r\n        icon: 'error',\r\n        title: 'filed',\r\n        text: `${err.message}`\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  const handelSubmit = async (e: any) => {\r\n\r\n\r\n    let msg: any;\r\n    setDispeldButtton(true)\r\n    e.preventDefault()\r\n\r\n    await setUser(forms).then((r) => msg = r.data.msg).catch(async (e) => {\r\n      setDispeldButtton(false)\r\n\r\n      return await Swal.fire({\r\n        icon: 'error',\r\n        title: 'filed',\r\n        text: `${e.message}`\r\n      })\r\n\r\n    })\r\n\r\n    if (msg === \" acount sucssfuly created \") {\r\n\r\n      await Swal.fire({\r\n        icon: 'success',\r\n        title: 'success',\r\n        text: `${msg}`\r\n      })\r\n      history('/login')\r\n      setDispeldButtton(false)\r\n      setForms(DefultFormVaule)\r\n\r\n    }\r\n\r\n    if (msg === \" this account is already exist!. try login.\") {\r\n\r\n      await Swal.fire({\r\n        icon: 'error',\r\n        title: 'felid',\r\n        text: `${msg}`\r\n      })\r\n\r\n      setDispeldButtton(false)\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <section className=\"h-screen w-full \">\r\n        <div className=\"px-6 py-12 w-full h-full\">\r\n          <div className=\"flex justify-center items-center w-full h-full text-gray-800 \">\r\n            <motion.form\r\n              initial={{ opacity: 0, y: -200 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.8 }}\r\n              onSubmit={(e) => handelSubmit(e)} className='w-[30rem] h-auto bg-white rounded-md shadow-lg p-4'>\r\n\r\n              <h1 className='text-2xl mb-4'>Sing in <hr className='mt-2' /></h1>\r\n\r\n              <div className=\"mb-6\">\r\n                <label className=\"sr-only\">User name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={forms.name}\r\n                  onChange={(e) => setForms({ ...forms, name: e.target.value })}\r\n                  className=\"form-control block w-full px-4 py-2 text-xl font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\r\n                  placeholder=\"User name\"\r\n                  required\r\n                  autoComplete='on'\r\n                  minLength={4}\r\n                  maxLength={12}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mb-6\">\r\n                <label className=\"sr-only\">Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control block w-full px-4 py-2 text-xl font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\r\n                  placeholder=\"Email address\"\r\n                  required\r\n                  autoComplete='on'\r\n                  value={forms.email}\r\n                  onChange={(e) => setForms({ ...forms, email: e.target.value })}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mb-6 relative\">\r\n                <label className=\"sr-only\">Password</label>\r\n                <input\r\n                  type={eye ? 'text' : 'password'}\r\n                  className=\"form-control block w-full px-4 py-2 text-xl font-normal text-gray-700 bg-white bg-clip-padding border border-solid border-gray-300 rounded transition ease-in-out m-0 focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  autoComplete='on'\r\n                  minLength={8}\r\n                  maxLength={12}\r\n                  value={forms.password}\r\n                  onChange={(e) => setForms({ ...forms, password: e.target.value })}\r\n                />\r\n                <div className=\"border absolute transition-all duration-150 ease-in-out top-[1px] right-[1px] h-[44px] rounded-lg p-2 cursor-pointer hover:bg-slate-100\"\r\n                  onClick={handelEye}\r\n                >\r\n                  {eye ? (\r\n                    <BsEye className='min-h-full w-8' />\r\n                  ) : (\r\n                    <BsEyeSlash className='min-h-full w-8' />\r\n                  )}\r\n\r\n                </div>\r\n              </div>\r\n\r\n              <div className='justify-center items-center flex mb-4 self-center'> all ready have an acount\r\n                <Link to='/login#top' className=\"underline text-blue-600 cursor-pointer ml-2\" >login</Link>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className={`inline-block px-7 py-3 ${dispeldButtton ? 'bg-gray-400' : 'bg-blue-600'} ease-in-out duration-100 transition-all  text-white font-medium text-sm leading-snug uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg w-full`}\r\n                data-mdb-ripple=\"true\"\r\n                data-mdb-ripple-color=\"light\"\r\n                disabled={dispeldButtton}\r\n              >\r\n                {dispeldButtton ? (\r\n                  <div className=\"flex justify-center items-center w-full \">\r\n                    <LoderBtn />\r\n                  </div>\r\n                ) : (\r\n                  'Sing in'\r\n                )}\r\n\r\n              </button>\r\n\r\n              <div\r\n                className=\"flex items-center my-4 before:flex-1 before:border-t before:border-gray-300 before:mt-0.5 after:flex-1 after:border-t after:border-gray-300 after:mt-0.5\"\r\n              >\r\n                <p className=\"text-center font-semibold mx-4 mb-0\">OR</p>\r\n              </div>\r\n\r\n              <GoogleLogin\r\n                clientId={Client_ID}\r\n                render={(prop: any) => (\r\n                  <button\r\n                    type=\"button\"\r\n                    data-mdb-ripple=\"true\"\r\n                    data-mdb-ripple-color=\"light\"\r\n                    onClick={prop.onClick}\r\n                    className=\"text-white bg-[#4285F4] hover:bg-[#4285F4]/90 focus:ring-4 focus:outline-none focus:ring-[#4285F4]/50 font-medium rounded-md flex justify-center items-center text-md px-5 py-2.5 text-center min-w-full mb-2\">\r\n                    <FcGoogle className=\"w-6 h-6 mr-2 -ml-1\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fab\" data-icon=\"google\" />\r\n                    Sing in with Google\r\n                  </button>\r\n                )}\r\n                onSuccess={handelSuccess}\r\n                onFailure={handelFailure}\r\n              />\r\n\r\n            </motion.form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Singin"],"names":["history","useNavigate","DefultFormVaule","name","password","email","useState","forms","setForms","eye","setEye","dispeldButtton","setDispeldButtton","handelSuccess","res","profileObj","tokenId","profile","token","userData","SingWithGoogle","then","r","msg","data","catch","e","Swal","icon","title","text","message","handelFailure","err","handelSubmit","preventDefault","setUser","className","initial","opacity","y","animate","transition","duration","onSubmit","type","value","onChange","target","placeholder","required","autoComplete","minLength","maxLength","onClick","to","disabled","clientId","process","render","prop","focusable","onSuccess","onFailure"],"sourceRoot":""}